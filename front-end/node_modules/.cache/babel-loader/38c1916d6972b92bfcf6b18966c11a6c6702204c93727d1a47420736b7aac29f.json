{"ast":null,"code":"// import { configureStore } from \"@reduxjs/toolkit\";\n// import { usersReducer } from \"./userSlice/index\";\n// import logger from \"redux-logger\";\n\n// const store = configureStore({\n//   reducer: {\n//     users: usersReducer,\n\n//   },\n//   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n// });\n\n// export default store;\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { usersReducer } from \"./userSlice\";\nimport logger from \"redux-logger\";\nconst store = configureStore({\n  reducer: {\n    users: usersReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger)\n});\nexport default store;","map":{"version":3,"names":["configureStore","usersReducer","logger","store","reducer","users","middleware","getDefaultMiddleware","concat"],"sources":["C:/Users/hp/Desktop/E-learning-System/front-end/src/data-store/redux/store.js"],"sourcesContent":["// import { configureStore } from \"@reduxjs/toolkit\";\r\n// import { usersReducer } from \"./userSlice/index\";\r\n// import logger from \"redux-logger\";\r\n\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     users: usersReducer,\r\n\r\n//   },\r\n//   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n// });\r\n\r\n// export default store;\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { usersReducer } from \"./userSlice\"\r\nimport logger from \"redux-logger\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    users: usersReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,QAAQ,aAAa;AAC1C,OAAOC,MAAM,MAAM,cAAc;AAEjC,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAC3BI,OAAO,EAAE;IACPC,KAAK,EAAEJ;EACT,CAAC;EACDK,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACN,MAAM;AAC5E,CAAC,CAAC;AAEF,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}