{"ast":null,"code":"// import { createSlice ,createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// const initialState = {\n//   loading: false,\n//   list: [],\n//   selected: [],\n//   error: null,\n// };\n\n// const usersSlice = createSlice({\n//   name: \"users\",\n//   initialState,\n//   reducers: {\n//     fetchingUsers: (state) => {\n//       state.loading = true;\n//     },\n//     loadUsers: (state, action) => {\n//       const { payload } = action;\n//       state.loading = false;\n//       state.list = payload;\n//     },\n//     errorOccured: (state, action) => {\n//       const { payload } = action;\n//       state.loading = false;\n//       state.error = payload;\n//     },\n//     removeUser: (state, action) => {\n//       const { payload } = action;\n//       state.list = state.list.filter((u) => u.id !== payload);\n//     },\n//     selectUser: (state, action) => {\n//       const { payload } = action;\n//       const exists = state.selected.some((u) => u.id === payload);\n//       if (!exists) {\n//         state.selected.push(payload);\n//       }\n//     },\n//   },\n// });\n\n// export const {\n//   loadUsers,\n//   fetchingUsers,\n//   errorOccured,\n//   removeUser,\n//   selectUser,\n// } = usersSlice.actions;\n\n// export const usersSliceSelector = (global) => global.users;\n\n// export const usersReducer = usersSlice.reducer;\n\n// export default usersSlice;","map":{"version":3,"names":[],"sources":["C:/Users/hp/Desktop/E-learning-System/front-end/src/data-store/redux/userSlice/index.js"],"sourcesContent":["// import { createSlice ,createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// const initialState = {\r\n//   loading: false,\r\n//   list: [],\r\n//   selected: [],\r\n//   error: null,\r\n// };\r\n\r\n// const usersSlice = createSlice({\r\n//   name: \"users\",\r\n//   initialState,\r\n//   reducers: {\r\n//     fetchingUsers: (state) => {\r\n//       state.loading = true;\r\n//     },\r\n//     loadUsers: (state, action) => {\r\n//       const { payload } = action;\r\n//       state.loading = false;\r\n//       state.list = payload;\r\n//     },\r\n//     errorOccured: (state, action) => {\r\n//       const { payload } = action;\r\n//       state.loading = false;\r\n//       state.error = payload;\r\n//     },\r\n//     removeUser: (state, action) => {\r\n//       const { payload } = action;\r\n//       state.list = state.list.filter((u) => u.id !== payload);\r\n//     },\r\n//     selectUser: (state, action) => {\r\n//       const { payload } = action;\r\n//       const exists = state.selected.some((u) => u.id === payload);\r\n//       if (!exists) {\r\n//         state.selected.push(payload);\r\n//       }\r\n//     },\r\n//   },\r\n// });\r\n\r\n// export const {\r\n//   loadUsers,\r\n//   fetchingUsers,\r\n//   errorOccured,\r\n//   removeUser,\r\n//   selectUser,\r\n// } = usersSlice.actions;\r\n\r\n// export const usersSliceSelector = (global) => global.users;\r\n\r\n// export const usersReducer = usersSlice.reducer;\r\n\r\n// export default usersSlice;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}