{"ast":null,"code":"// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import axios from \"axios\";\n\n// export const registerUser = createAsyncThunk(\n//   \"users/registerUser\",\n//   async ({ name, email, password }, { rejectWithValue }) => {\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:3030/api/users/register\",\n//         { name, email, password }\n//       );\n//       return response.data;\n//     } catch (error) {\n//       return rejectWithValue(error.response.data);\n//     }\n//   }\n// );\n\n// const initialState = {\n//   loading: false,\n//   list: [],\n//   error: null,\n//   user: null,\n// };\n\n// const usersSlice = createSlice({\n//   name: \"users\",\n//   initialState,\n//   reducers: {\n//     fetchingUsers: (state) => {\n//       state.loading = true;\n//     },\n//     loadUsers: (state, action) => {\n//       const { payload } = action;\n//       state.loading = false;\n//       state.list = payload;\n//     },\n//     errorOccured: (state, action) => {\n//       const { payload } = action;\n//       state.loading = false;\n//       state.error = payload;\n//     },\n//   },\n//   extraReducers: (builder) => {\n//     builder\n//       .addCase(registerUser.pending, (state) => {\n//         state.loading = true;\n//         state.error = null;\n//       })\n//       .addCase(registerUser.fulfilled, (state, { payload }) => {\n//         state.loading = false;\n//         state.user = payload;\n//       })\n//       .addCase(registerUser.rejected, (state, { payload }) => {\n//         state.loading = false;\n//         state.error = payload;\n//       });\n//   },\n// });\n\n// export const { loadUsers, fetchingUsers, errorOccured } = usersSlice.actions;\n\n// export const usersSliceSelector = (state) => state.users;\n\n// export default usersSlice.reducer;\n\n// export const usersReducer = usersSlice.reducer;","map":{"version":3,"names":[],"sources":["C:/Users/hp/Desktop/E-learning-System/front-end/src/data-store/redux/userSlice/index.js"],"sourcesContent":["// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n// import axios from \"axios\";\r\n\r\n// export const registerUser = createAsyncThunk(\r\n//   \"users/registerUser\",\r\n//   async ({ name, email, password }, { rejectWithValue }) => {\r\n//     try {\r\n//       const response = await axios.post(\r\n//         \"http://localhost:3030/api/users/register\",\r\n//         { name, email, password }\r\n//       );\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error.response.data);\r\n//     }\r\n//   }\r\n// );\r\n\r\n// const initialState = {\r\n//   loading: false,\r\n//   list: [],\r\n//   error: null,\r\n//   user: null,\r\n// };\r\n\r\n// const usersSlice = createSlice({\r\n//   name: \"users\",\r\n//   initialState,\r\n//   reducers: {\r\n//     fetchingUsers: (state) => {\r\n//       state.loading = true;\r\n//     },\r\n//     loadUsers: (state, action) => {\r\n//       const { payload } = action;\r\n//       state.loading = false;\r\n//       state.list = payload;\r\n//     },\r\n//     errorOccured: (state, action) => {\r\n//       const { payload } = action;\r\n//       state.loading = false;\r\n//       state.error = payload;\r\n//     },\r\n//   },\r\n//   extraReducers: (builder) => {\r\n//     builder\r\n//       .addCase(registerUser.pending, (state) => {\r\n//         state.loading = true;\r\n//         state.error = null;\r\n//       })\r\n//       .addCase(registerUser.fulfilled, (state, { payload }) => {\r\n//         state.loading = false;\r\n//         state.user = payload;\r\n//       })\r\n//       .addCase(registerUser.rejected, (state, { payload }) => {\r\n//         state.loading = false;\r\n//         state.error = payload;\r\n//       });\r\n//   },\r\n// });\r\n\r\n// export const { loadUsers, fetchingUsers, errorOccured } = usersSlice.actions;\r\n\r\n// export const usersSliceSelector = (state) => state.users;\r\n\r\n// export default usersSlice.reducer;\r\n\r\n// export const usersReducer = usersSlice.reducer;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}